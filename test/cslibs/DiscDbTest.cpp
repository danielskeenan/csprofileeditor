/**
 * @file DiscDbTest.cpp
 *
 * @author dankeenan
 * @date 4/26/21
 * @copyright (c) 2021 Dan Keenan
 */

#include <gtest/gtest.h>
#include <cslibs/disc/DiscDb.h>
#include <filesystem>

using namespace cslibs;

class DiscDbTest : public ::testing::Test {
 private:
  static inline auto kDefsContents = R"EOF(
IDENT 3:0
MANUFACTURER AVAB
CONSOLE CONGO

$SOFTWAREVERSION V7.0 R0
! animation File

CLEAR $FXDISC
$CARALLONVERSION 11.8.0
! 2015-12-15T11:36:08Z


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Definitions
! $FXDISC animation record start
! $$FXDISCMANUFACTURER Manufacturer, Range
! $$FXDISCINFO IDNumber, Name
! $$IMAGE guid of image (optional)

! Manufacturer GAM
! Range catalogue
! Range Catalogue

$FXDISC
$$FXDISCMANUFACTURER GAM,Catalogue
$$FXDISCINFO 100,Cupids
$$IMAGE 8A42C305-5601-8243-AC54-FDCE53119538
! 018900100.png

$FXDISC
$$FXDISCMANUFACTURER GAM,Catalogue
$$FXDISCINFO 101,Doves
$$IMAGE 2685990D-85B8-C845-91AC-038EEB160966
! 018900101.png

ENDDATA
  )EOF";
  static inline auto kDataIndexContents = R"EOF(
8A42C305-5601-8243-AC54-FDCE53119538,0,animation,018900100.png
2685990D-85B8-C845-91AC-038EEB160966,2787,animation,018900101.png
)EOF";

 private:
  // These binary blobs come contain the test images.  They are separated out so the actual image data can be tested for.
  static inline unsigned char kG100Header[] = {
      0x00, 0x00, 0x00, 0x48, 0x00, 0x38, 0x00, 0x41, 0x00, 0x34,
      0x00, 0x32, 0x00, 0x43, 0x00, 0x33, 0x00, 0x30, 0x00, 0x35,
      0x00, 0x2D, 0x00, 0x35, 0x00, 0x36, 0x00, 0x30, 0x00, 0x31,
      0x00, 0x2D, 0x00, 0x38, 0x00, 0x32, 0x00, 0x34, 0x00, 0x33,
      0x00, 0x2D, 0x00, 0x41, 0x00, 0x43, 0x00, 0x35, 0x00, 0x34,
      0x00, 0x2D, 0x00, 0x46, 0x00, 0x44, 0x00, 0x43, 0x00, 0x45,
      0x00, 0x35, 0x00, 0x33, 0x00, 0x31, 0x00, 0x31, 0x00, 0x39,
      0x00, 0x35, 0x00, 0x33, 0x00, 0x38, 0x00, 0x00, 0x0A, 0x93,
  };
 protected:
  static inline unsigned char kG100Image[] = {
      0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00,
      0x30, 0x00, 0x00, 0x00, 0x30, 0x08, 0x06, 0x00, 0x00, 0x00, 0x57, 0x02, 0xF9, 0x87, 0x00, 0x00, 0x00, 0x09, 0x70,
      0x48, 0x59, 0x73, 0x00, 0x00, 0x0B, 0x13, 0x00, 0x00, 0x0B, 0x13, 0x01, 0x00, 0x9A, 0x9C, 0x18, 0x00, 0x00, 0x00,
      0x08, 0x74, 0x45, 0x58, 0x74, 0x43, 0x6F, 0x6D, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0xF6, 0xCC, 0x96, 0xBF, 0x00, 0x00,
      0x0A, 0x31, 0x49, 0x44, 0x41, 0x54, 0x68, 0x81, 0xCD, 0x9A, 0x6B, 0x4C, 0x94, 0x57, 0x1A, 0xC7, 0x7F, 0x73, 0xE3,
      0x32, 0x33, 0xC2, 0x00, 0xCE, 0x0C, 0x33, 0xD0, 0x61, 0xD4, 0x85, 0xE1, 0x22, 0x15, 0xC1, 0xA2, 0x43, 0xD0, 0x2A,
      0x06, 0x5D, 0x0D, 0x6B, 0x8B, 0x94, 0x12, 0x9B, 0xD6, 0x76, 0xBD, 0x74, 0x13, 0xD3, 0xD4, 0x44, 0x9B, 0x6D, 0x9A,
      0xB4, 0x69, 0x36, 0xDD, 0xEC, 0x9A, 0xEE, 0x87, 0x56, 0xB2, 0xE9, 0x36, 0x55, 0xB6, 0x4D, 0x0D, 0x6E, 0x6C, 0xB3,
      0x35, 0x29, 0xB6, 0xB4, 0xA5, 0x35, 0x56, 0xC1, 0xAC, 0x0C, 0x15, 0xA8, 0x16, 0x04, 0xAC, 0x97, 0x00, 0x15, 0x71,
      0x10, 0x18, 0x18, 0x19, 0xE6, 0xF2, 0x9E, 0xFD, 0x30, 0x2B, 0x2D, 0xD6, 0xCB, 0x0C, 0x8C, 0xED, 0xFE, 0x93, 0xF7,
      0xC3, 0xBC, 0x79, 0x9E, 0xF7, 0xF9, 0xFF, 0xCF, 0x73, 0x2E, 0xCF, 0x39, 0x67, 0x64, 0xFC, 0x7F, 0x42, 0x0E, 0xA4,
      0x00, 0x0B, 0x80, 0x4C, 0xE0, 0x37, 0xC0, 0x7C, 0xC0, 0x0C, 0xE8, 0x81, 0x04, 0x40, 0x0D, 0xA8, 0x64, 0xBF, 0x16,
      0xC3, 0x5B, 0xA0, 0x04, 0x92, 0x01, 0x3B, 0x50, 0x0A, 0x2C, 0x23, 0x28, 0x20, 0x1E, 0x50, 0xFC, 0x8A, 0xBC, 0xEE,
      0x89, 0x64, 0xE0, 0x39, 0xE0, 0x28, 0x30, 0x0A, 0x88, 0x19, 0x3C, 0xBF, 0x38, 0x62, 0x81, 0x32, 0xE0, 0x63, 0x60,
      0x32, 0x4C, 0xB2, 0xBF, 0xAA, 0x80, 0x38, 0xE0, 0x0F, 0x40, 0x3B, 0xE0, 0x8B, 0x00, 0xF1, 0x5F, 0x4C, 0x40, 0x14,
      0xB0, 0x0D, 0xE8, 0x04, 0xA4, 0x08, 0x12, 0xBF, 0xEF, 0x02, 0x14, 0xC0, 0x6F, 0x81, 0x8E, 0xFB, 0x40, 0xFA, 0xBE,
      0x0B, 0x48, 0x03, 0xFE, 0x05, 0x78, 0xEE, 0x33, 0xF9, 0x88, 0x0B, 0x90, 0x01, 0x15, 0xC0, 0x95, 0x99, 0x12, 0xD2,
      0x6A, 0xB5, 0xA2, 0xBC, 0xBC, 0xFC, 0x57, 0x11, 0x90, 0x00, 0xEC, 0x67, 0x96, 0xFD, 0x3C, 0x3A, 0x3A, 0x5A, 0xE4,
      0xE7, 0xE7, 0x87, 0x6C, 0xAF, 0x8C, 0x10, 0xF9, 0x0C, 0xE0, 0x10, 0xB0, 0x88, 0x60, 0x16, 0xC2, 0x86, 0xD1, 0x68,
      0x64, 0xD1, 0xA2, 0x45, 0xFC, 0xF0, 0xC3, 0x0F, 0x8C, 0x8C, 0x8C, 0x84, 0xEC, 0x17, 0x89, 0x55, 0xAE, 0x04, 0xF8,
      0x37, 0x60, 0x63, 0x86, 0xE4, 0x0B, 0x0B, 0x0B, 0xB1, 0xD9, 0x6C, 0x38, 0x1C, 0x0E, 0xB6, 0x6C, 0xD9, 0xC2, 0xD8,
      0xD8, 0x18, 0x00, 0xC3, 0xC3, 0xC3, 0xF7, 0xF4, 0x9D, 0xAD, 0x80, 0xA7, 0x81, 0x83, 0xC0, 0xDC, 0xD9, 0x7C, 0xC4,
      0xE5, 0x72, 0x51, 0x54, 0x54, 0xC4, 0x13, 0x4F, 0x3C, 0x41, 0x4A, 0x4A, 0x0A, 0x83, 0x83, 0x83, 0x48, 0x92, 0xC4,
      0xE5, 0xCB, 0x97, 0x6F, 0x6B, 0x6F, 0x36, 0x9B, 0x79, 0xE1, 0x85, 0x17, 0xB8, 0x7A, 0xF5, 0xEA, 0x8C, 0x63, 0xCA,
      0x81, 0xAD, 0xCC, 0x72, 0x96, 0xB1, 0xDB, 0xED, 0xE2, 0xF3, 0xCF, 0x3F, 0x17, 0x2F, 0xBE, 0xF8, 0xA2, 0xA8, 0xAD,
      0xAD, 0x15, 0x9D, 0x9D, 0x9D, 0x62, 0xF7, 0xEE, 0xDD, 0xA2, 0xA6, 0xA6, 0x46, 0xAC, 0x5D, 0xBB, 0xF6, 0xB6, 0x3E,
      0x32, 0x99, 0x4C, 0xD4, 0xD4, 0xD4, 0x88, 0x40, 0x20, 0x20, 0x06, 0x07, 0x07, 0x67, 0x3C, 0x06, 0x7E, 0x0F, 0xFC,
      0x1D, 0x88, 0x9E, 0xA1, 0x3F, 0x72, 0xB9, 0x9C, 0xC2, 0xC2, 0x42, 0xFA, 0xFA, 0xFA, 0xF0, 0xF9, 0x7C, 0x34, 0x34,
      0x34, 0x70, 0xFC, 0xF8, 0x71, 0xCC, 0x66, 0x33, 0xD7, 0xAF, 0x5F, 0x67, 0x60, 0x60, 0xE0, 0x67, 0x3E, 0xE9, 0xE9,
      0xE9, 0xE4, 0xE7, 0xE7, 0xF3, 0xD8, 0x63, 0x8F, 0xD1, 0xD4, 0xD4, 0x44, 0x71, 0x71, 0xF1, 0x8C, 0xBA, 0xD0, 0xD3,
      0xC0, 0x3F, 0x80, 0x98, 0x99, 0x92, 0x07, 0x10, 0x42, 0x30, 0x31, 0x31, 0xC1, 0xC3, 0x0F, 0x3F, 0xCC, 0xB1, 0x63,
      0xC7, 0xF0, 0x78, 0x3C, 0x98, 0x4C, 0x26, 0x7C, 0x3E, 0x1F, 0xA3, 0xA3, 0xA3, 0xB4, 0xB4, 0xB4, 0xE0, 0x72, 0xB9,
      0xA6, 0xF9, 0x68, 0xB5, 0x5A, 0xAA, 0xAB, 0xAB, 0x69, 0x6B, 0x6B, 0xC3, 0xED, 0x76, 0x33, 0x38, 0x38, 0x18, 0xF6,
      0xA0, 0x2B, 0x01, 0x8E, 0x10, 0x2C, 0xC8, 0x22, 0x82, 0x0D, 0x1B, 0x36, 0xA0, 0x52, 0xA9, 0x68, 0x6F, 0x6F, 0x67,
      0x64, 0x64, 0x84, 0xFC, 0xFC, 0x7C, 0x4E, 0x9C, 0x38, 0xC1, 0xC4, 0xC4, 0xC4, 0x6D, 0xED, 0x75, 0x3A, 0x1D, 0xD5,
      0xD5, 0xD5, 0xE8, 0x74, 0x3A, 0xDE, 0x79, 0xE7, 0x9D, 0xB0, 0x04, 0x64, 0x00, 0x0D, 0x80, 0x25, 0x12, 0xC4, 0x6F,
      0xC2, 0x68, 0x34, 0xE2, 0xF5, 0x7A, 0x43, 0x9A, 0x71, 0x6E, 0x62, 0xDF, 0xBE, 0x7D, 0x0C, 0x0F, 0x0F, 0xE3, 0x74,
      0x3A, 0x91, 0x87, 0xE8, 0x93, 0x40, 0x70, 0x9E, 0xBF, 0x23, 0x79, 0x95, 0x4A, 0xC5, 0xEB, 0xAF, 0xBF, 0x4E, 0x6A,
      0x6A, 0x6A, 0xC8, 0x44, 0x00, 0xAE, 0x5E, 0xBD, 0x1A, 0x16, 0x79, 0x80, 0xF8, 0xF8, 0x78, 0xCE, 0x9D, 0x3B, 0x47,
      0x20, 0x10, 0x08, 0x49, 0x80, 0x0C, 0xF8, 0x1B, 0xC1, 0x45, 0xEA, 0x8E, 0xF0, 0xFB, 0xFD, 0xF4, 0xF7, 0xF7, 0x93,
      0x9E, 0x9E, 0x1E, 0x16, 0x99, 0x70, 0x61, 0x34, 0x1A, 0xE9, 0xEC, 0xEC, 0xC4, 0xE1, 0x70, 0xA0, 0xD3, 0xE9, 0x42,
      0x1A, 0xC4, 0x15, 0xC0, 0x5F, 0x09, 0x61, 0x91, 0x3A, 0x75, 0xEA, 0x14, 0x56, 0xAB, 0x15, 0x85, 0x42, 0xC1, 0xF0,
      0xF0, 0x30, 0x49, 0x49, 0x49, 0xA8, 0xD5, 0x6A, 0x02, 0x81, 0x00, 0x1A, 0x8D, 0x86, 0xC9, 0xC9, 0xC9, 0x7B, 0x06,
      0x33, 0x18, 0x0C, 0x6C, 0xDA, 0xB4, 0x09, 0x93, 0xC9, 0x44, 0x4F, 0x4F, 0x0F, 0x00, 0xD1, 0xD1, 0xD1, 0xC8, 0x64,
      0x32, 0x24, 0x49, 0xC2, 0xED, 0x76, 0xD3, 0xDA, 0xDA, 0x4A, 0x45, 0x45, 0x05, 0x29, 0x29, 0x29, 0xF7, 0x24, 0x95,
      0x06, 0xFC, 0x87, 0xE0, 0xD6, 0x2F, 0x64, 0x94, 0x95, 0x95, 0xA1, 0xD1, 0x68, 0x30, 0x18, 0x0C, 0x74, 0x77, 0x77,
      0xA3, 0xD1, 0x68, 0xE8, 0xEF, 0xEF, 0xE7, 0xD4, 0xA9, 0x53, 0xD3, 0xEC, 0x16, 0x2C, 0x58, 0xC0, 0x85, 0x0B, 0x17,
      0x10, 0x42, 0x90, 0x9C, 0x9C, 0x4C, 0x59, 0x59, 0x19, 0x76, 0xBB, 0x9D, 0x9E, 0x9E, 0x1E, 0x94, 0x4A, 0x25, 0x26,
      0x93, 0x89, 0x86, 0x86, 0x06, 0xDC, 0x6E, 0x37, 0xDD, 0xDD, 0xDD, 0x53, 0x0B, 0xDB, 0xC6, 0x8D, 0x1B, 0x79, 0xE9,
      0xA5, 0x97, 0x58, 0xBF, 0x7E, 0xFD, 0x5D, 0xBB, 0x90, 0x02, 0xD8, 0x13, 0x0E, 0x79, 0xA5, 0x52, 0xC9, 0xDC, 0xB9,
      0x73, 0x89, 0x8B, 0x8B, 0x03, 0xA0, 0xA6, 0xA6, 0x86, 0xB6, 0xB6, 0x36, 0x7C, 0x3E, 0x1F, 0x17, 0x2F, 0x5E, 0x9C,
      0x66, 0xFB, 0xE0, 0x83, 0x0F, 0xB2, 0x67, 0xCF, 0x1E, 0x6C, 0x36, 0x1B, 0x5A, 0xAD, 0x16, 0xB5, 0x5A, 0x8D, 0xDB,
      0xED, 0xC6, 0x60, 0x30, 0xF0, 0xC8, 0x23, 0x8F, 0xB0, 0x74, 0xE9, 0x52, 0xE2, 0xE3, 0xE3, 0x29, 0x2D, 0x2D, 0xA5,
      0xBD, 0xBD, 0x9D, 0xC5, 0x8B, 0x17, 0x4F, 0xF9, 0xF6, 0xF6, 0xF6, 0x92, 0x9D, 0x9D, 0xCD, 0x86, 0x0D, 0x1B, 0xEE,
      0xDA, 0x85, 0xD6, 0x02, 0x7F, 0x22, 0x78, 0x62, 0x10, 0x12, 0xB6, 0x6F, 0xDF, 0x4E, 0x62, 0x62, 0x22, 0x3B, 0x77,
      0xEE, 0xE4, 0xCB, 0x2F, 0xBF, 0x24, 0x21, 0x21, 0x81, 0x8A, 0x8A, 0x0A, 0x2A, 0x2B, 0x2B, 0x29, 0x2C, 0x2C, 0xE4,
      0x93, 0x4F, 0x3E, 0x41, 0x88, 0x60, 0x05, 0xEC, 0x72, 0xB9, 0xD8, 0xBA, 0x75, 0x2B, 0x31, 0x31, 0x31, 0x14, 0x14,
      0x14, 0x30, 0x3E, 0x3E, 0xCE, 0xFC, 0xF9, 0xF3, 0x99, 0x98, 0x98, 0x60, 0x74, 0x74, 0x74, 0x4A, 0x70, 0x6F, 0x6F,
      0x2F, 0x0E, 0x87, 0x03, 0xBB, 0xDD, 0xCE, 0xE9, 0xD3, 0xA7, 0x11, 0x42, 0x10, 0x1F, 0x1F, 0x4F, 0x6C, 0x6C, 0x2C,
      0x5E, 0xAF, 0xF7, 0x8E, 0x02, 0xA2, 0x80, 0xC3, 0x84, 0xD1, 0xFA, 0x6A, 0xB5, 0x9A, 0xA2, 0xA2, 0x22, 0xDE, 0x7B,
      0xEF, 0x3D, 0x92, 0x93, 0x93, 0xD9, 0xB5, 0x6B, 0x17, 0x16, 0x8B, 0x05, 0x99, 0x4C, 0x46, 0x6F, 0x6F, 0x2F, 0x8F,
      0x3E, 0xFA, 0x28, 0x87, 0x0F, 0x1F, 0xC6, 0xEF, 0xF7, 0xE3, 0xF5, 0x7A, 0xF1, 0xFB, 0xFD, 0x34, 0x37, 0x37, 0xA3,
      0x56, 0xAB, 0x91, 0x24, 0x89, 0x8D, 0x1B, 0x37, 0xA2, 0xD3, 0xE9, 0x88, 0x8B, 0x8B, 0xC3, 0xE3, 0xF1, 0xB0, 0x6B,
      0xD7, 0x2E, 0x0C, 0x06, 0x03, 0x2D, 0x2D, 0x2D, 0x58, 0x2C, 0x16, 0x2E, 0x5C, 0xB8, 0x40, 0x6C, 0x6C, 0x2C, 0xA3,
      0xA3, 0xA3, 0x0C, 0x0D, 0x0D, 0x51, 0x57, 0x57, 0xC7, 0xB7, 0xDF, 0x7E, 0x7B, 0xC7, 0x2E, 0xB4, 0x19, 0xC8, 0x0A,
      0x95, 0x3C, 0x80, 0x42, 0xA1, 0xA0, 0xBD, 0xBD, 0x1D, 0xA5, 0x52, 0x49, 0x7D, 0x7D, 0x3D, 0x6E, 0xB7, 0x9B, 0xE2,
      0xE2, 0x62, 0x26, 0x26, 0x26, 0x58, 0xB8, 0x70, 0x21, 0x0E, 0x87, 0x83, 0xED, 0xDB, 0xB7, 0xF3, 0xF6, 0xDB, 0x6F,
      0xA3, 0x50, 0x04, 0xDB, 0xED, 0xFC, 0xF9, 0xF3, 0x24, 0x25, 0x25, 0x11, 0x15, 0x15, 0xC5, 0x57, 0x5F, 0x7D, 0x45,
      0x7D, 0x7D, 0x3D, 0x0E, 0x87, 0x83, 0x39, 0x73, 0xE6, 0x00, 0x50, 0x57, 0x57, 0x47, 0x62, 0x62, 0x22, 0xF9, 0xF9,
      0xF9, 0x38, 0x1C, 0x0E, 0x9C, 0x4E, 0x27, 0xEB, 0xD7, 0xAF, 0xE7, 0xB5, 0xD7, 0x5E, 0x03, 0x82, 0x59, 0xBC, 0x5D,
      0x06, 0xE2, 0x80, 0x7F, 0x12, 0x66, 0x85, 0xB9, 0x70, 0xE1, 0x42, 0xD4, 0x6A, 0x35, 0xF3, 0xE7, 0xCF, 0xA7, 0xBC,
      0xBC, 0x9C, 0x75, 0xEB, 0xD6, 0x61, 0x30, 0x18, 0xE8, 0xEB, 0xEB, 0xA3, 0xB3, 0xB3, 0x93, 0xCC, 0xCC, 0x4C, 0x9A,
      0x9B, 0x9B, 0x71, 0xB9, 0x5C, 0x9C, 0x3E, 0x7D, 0x1A, 0xAF, 0xD7, 0x8B, 0x24, 0x49, 0x74, 0x75, 0x75, 0xF1, 0xFC,
      0xF3, 0xCF, 0x93, 0x90, 0x90, 0x80, 0x5E, 0xAF, 0xC7, 0x6C, 0x36, 0x13, 0x15, 0x15, 0xC5, 0xE4, 0xE4, 0x24, 0x6F,
      0xBE, 0xF9, 0x26, 0xEF, 0xBE, 0xFB, 0x2E, 0x69, 0x69, 0x69, 0x9C, 0x3D, 0x7B, 0x96, 0xA1, 0xA1, 0x21, 0xBA, 0xBB,
      0xBB, 0x69, 0x6C, 0x6C, 0xC4, 0xEF, 0xF7, 0x03, 0xDC, 0x36, 0x03, 0x9B, 0x08, 0xD6, 0xF6, 0x61, 0xC1, 0x64, 0x32,
      0xD1, 0xD8, 0xD8, 0x88, 0x5E, 0xAF, 0xA7, 0xAA, 0xAA, 0x0A, 0xA5, 0x52, 0xC9, 0xF9, 0xF3, 0xE7, 0x19, 0x1A, 0x1A,
      0x42, 0xA7, 0xD3, 0xA1, 0xD5, 0x6A, 0xB1, 0x5A, 0xAD, 0xA8, 0xD5, 0x6A, 0xBC, 0x5E, 0xEF, 0x94, 0xDF, 0xC8, 0xC8,
      0x08, 0xAF, 0xBC, 0xF2, 0x0A, 0xA9, 0xA9, 0xA9, 0xD8, 0x6C, 0x36, 0xB6, 0x6C, 0xD9, 0xC2, 0x89, 0x13, 0x27, 0x78,
      0xF2, 0xC9, 0x27, 0x01, 0x58, 0xB7, 0x6E, 0x1D, 0xCD, 0xCD, 0xCD, 0x8C, 0x8E, 0x8E, 0x02, 0x20, 0x49, 0x12, 0x1E,
      0x8F, 0x67, 0xCA, 0xFF, 0x56, 0x01, 0xB1, 0xC0, 0x0E, 0x66, 0xB0, 0x31, 0xF9, 0xF4, 0xD3, 0x4F, 0x99, 0x9C, 0x9C,
      0x24, 0x26, 0x26, 0x86, 0x8F, 0x3E, 0xFA, 0x88, 0x83, 0x07, 0x0F, 0x52, 0x5E, 0x5E, 0x8E, 0xC5, 0x62, 0xC1, 0xE9,
      0x74, 0xD2, 0xD4, 0xD4, 0x84, 0xC7, 0xE3, 0x61, 0x60, 0x60, 0x60, 0x9A, 0x00, 0x00, 0x9B, 0xCD, 0x46, 0x62, 0x62,
      0x22, 0x45, 0x45, 0x45, 0xDC, 0xB8, 0x71, 0x83, 0x23, 0x47, 0x8E, 0xD0, 0xD7, 0xD7, 0x47, 0x6C, 0x6C, 0x2C, 0x5F,
      0x7C, 0xF1, 0x05, 0xDF, 0x7C, 0xF3, 0xCD, 0x1D, 0xE3, 0xDE, 0x3A, 0xC3, 0xAC, 0x06, 0xB2, 0xC3, 0x25, 0x0F, 0xC1,
      0xEA, 0xD2, 0x64, 0x32, 0x61, 0xB3, 0xD9, 0x18, 0x19, 0x19, 0x41, 0xA5, 0x52, 0x61, 0xB1, 0x58, 0x90, 0x24, 0x09,
      0xB9, 0x5C, 0x4E, 0x47, 0x47, 0x07, 0xC0, 0xD4, 0x14, 0xFB, 0x53, 0x34, 0x35, 0x35, 0x51, 0x55, 0x55, 0x45, 0x52,
      0x52, 0x12, 0x26, 0x93, 0x89, 0x6B, 0xD7, 0xAE, 0x21, 0x84, 0xA0, 0xA1, 0xA1, 0x21, 0x6C, 0x1E, 0x1F, 0x33, 0xC3,
      0xCD, 0x49, 0x56, 0x56, 0x96, 0xB8, 0x78, 0xF1, 0xA2, 0x90, 0x24, 0x49, 0x78, 0x3C, 0x1E, 0xF1, 0xC6, 0x1B, 0x6F,
      0x88, 0xCA, 0xCA, 0x4A, 0xB1, 0x62, 0xC5, 0x0A, 0x71, 0xF4, 0xE8, 0x51, 0xB1, 0x64, 0xC9, 0x12, 0x11, 0x1F, 0x1F,
      0x2F, 0xF4, 0x7A, 0x7D, 0x44, 0x8F, 0x55, 0x7E, 0x9A, 0x81, 0x64, 0x82, 0x73, 0xFF, 0x8C, 0xA0, 0xD5, 0x6A, 0xD1,
      0xE9, 0x74, 0x74, 0x75, 0x75, 0x71, 0xF2, 0xE4, 0x49, 0x7A, 0x7A, 0x7A, 0xD0, 0x6A, 0xB5, 0x54, 0x55, 0x55, 0xD1,
      0xD5, 0xD5, 0x85, 0xC5, 0x62, 0x61, 0xDE, 0xBC, 0x79, 0x7C, 0xF8, 0xE1, 0x87, 0x33, 0x0D, 0x71, 0x4F, 0x3C, 0xC7,
      0x2C, 0x5B, 0x63, 0xDB, 0xB6, 0x6D, 0x62, 0x74, 0x74, 0x54, 0x54, 0x57, 0x57, 0x8B, 0x4B, 0x97, 0x2E, 0x89, 0x97,
      0x5F, 0x7E, 0x59, 0x68, 0xB5, 0x5A, 0xF1, 0xCC, 0x33, 0xCF, 0x88, 0x7D, 0xFB, 0xF6, 0x45, 0xBC, 0xF5, 0x01, 0x71,
      0x73, 0x1A, 0x55, 0x02, 0x7F, 0x01, 0xE6, 0xCD, 0xA6, 0x05, 0xBC, 0x5E, 0x2F, 0xC5, 0xC5, 0xC5, 0x9C, 0x3D, 0x7B,
      0x96, 0xFA, 0xFA, 0x7A, 0x56, 0xAE, 0x5C, 0xC9, 0xCE, 0x9D, 0x3B, 0x39, 0x70, 0xE0, 0x00, 0x46, 0xA3, 0x91, 0xCC,
      0xCC, 0x4C, 0xCA, 0xCA, 0xCA, 0x30, 0x9B, 0xCD, 0x74, 0x74, 0x74, 0x20, 0x49, 0xD2, 0x6C, 0xC2, 0x4D, 0x43, 0x2A,
      0x61, 0x9C, 0xCF, 0xCB, 0x64, 0xB2, 0xDB, 0xBE, 0x9F, 0x33, 0x67, 0x8E, 0x78, 0xE8, 0xA1, 0x87, 0x84, 0x52, 0xA9,
      0x14, 0x80, 0x90, 0xCB, 0xE5, 0x62, 0xF7, 0xEE, 0xDD, 0xC2, 0x60, 0x30, 0x88, 0xAA, 0xAA, 0x2A, 0x71, 0xE6, 0xCC,
      0x19, 0xD1, 0xDF, 0xDF, 0x2F, 0x4A, 0x4A, 0x4A, 0x84, 0x42, 0xA1, 0x88, 0x54, 0x16, 0x00, 0xA8, 0xBC, 0x9B, 0xD1,
      0xBC, 0x79, 0xF3, 0x44, 0x5C, 0x5C, 0x9C, 0x00, 0x84, 0xD5, 0x6A, 0x15, 0x79, 0x79, 0x79, 0x22, 0x3B, 0x3B, 0x3B,
      0xA4, 0x00, 0x72, 0xB9, 0xFC, 0xC7, 0x74, 0x2B, 0x14, 0x22, 0x3B, 0x3B, 0x5B, 0x58, 0xAD, 0xD6, 0x88, 0x0F, 0xE2,
      0xD2, 0xBB, 0xA5, 0x47, 0x2E, 0x97, 0x93, 0x97, 0x97, 0x37, 0x55, 0xD7, 0x9B, 0xCD, 0x66, 0x4A, 0x4A, 0x4A, 0xE8,
      0xE9, 0xE9, 0xA1, 0xA7, 0xA7, 0x87, 0x43, 0x87, 0x0E, 0x4D, 0x15, 0x69, 0x3F, 0x85, 0xC1, 0x60, 0x60, 0x68, 0x68,
      0x68, 0xEA, 0x77, 0x20, 0x10, 0xE0, 0xCA, 0x95, 0x2B, 0x58, 0xAD, 0x56, 0x2E, 0x5D, 0xBA, 0x74, 0xB7, 0x90, 0x21,
      0x43, 0x41, 0x70, 0x31, 0xFB, 0x33, 0x60, 0xBC, 0x93, 0xD1, 0xF0, 0xF0, 0x30, 0x97, 0x2F, 0x5F, 0xC6, 0x68, 0x34,
      0xB2, 0x66, 0xCD, 0x1A, 0x56, 0xAF, 0x5E, 0xCD, 0xC9, 0x93, 0x27, 0xC9, 0xC9, 0xC9, 0x41, 0xAF, 0xD7, 0xD3, 0xD2,
      0xD2, 0xC2, 0x8D, 0x1B, 0x37, 0x7E, 0xE6, 0x97, 0x9B, 0x9B, 0x4B, 0x46, 0x46, 0x06, 0x4B, 0x96, 0x2C, 0xA1, 0xBF,
      0xBF, 0x9F, 0xB8, 0xB8, 0x38, 0x56, 0xAD, 0x5A, 0xC5, 0xDC, 0xB9, 0x73, 0xF9, 0xEE, 0xBB, 0xEF, 0x22, 0x26, 0x20,
      0x15, 0xF8, 0x23, 0xF7, 0x38, 0x69, 0x90, 0xC9, 0x64, 0xA4, 0xA7, 0xA7, 0xD3, 0xD6, 0xD6, 0xC6, 0xAA, 0x55, 0xAB,
      0x30, 0x9B, 0xCD, 0x1C, 0x3D, 0x7A, 0x94, 0x2B, 0x57, 0xAE, 0x70, 0xFD, 0xFA, 0x75, 0x9C, 0x4E, 0xE7, 0x34, 0xFB,
      0x65, 0xCB, 0x96, 0xF1, 0xD4, 0x53, 0x4F, 0x51, 0x57, 0x57, 0xC7, 0xC0, 0xC0, 0x00, 0x2B, 0x56, 0xAC, 0x40, 0x08,
      0xC1, 0xD7, 0x5F, 0x7F, 0xCD, 0x99, 0x33, 0x67, 0x22, 0x42, 0x1E, 0x82, 0xAD, 0xBF, 0x80, 0xE0, 0x6D, 0xE0, 0x5D,
      0x21, 0x84, 0xC0, 0xE5, 0x72, 0x11, 0x15, 0x15, 0x85, 0xDF, 0xEF, 0xA7, 0xBD, 0xBD, 0x1D, 0x95, 0x4A, 0x45, 0x4C,
      0x4C, 0x0C, 0x9D, 0x9D, 0x9D, 0x53, 0x76, 0x6B, 0xD7, 0xAE, 0xE5, 0xD9, 0x67, 0x9F, 0x65, 0xEF, 0xDE, 0xBD, 0x48,
      0x92, 0xC4, 0x8E, 0x1D, 0x3B, 0x48, 0x4E, 0x4E, 0x66, 0xE5, 0xCA, 0x95, 0x38, 0x9D, 0x4E, 0x7C, 0x3E, 0x5F, 0xC4,
      0xC8, 0xC3, 0x8F, 0xB7, 0x28, 0xBF, 0x0B, 0xC5, 0x78, 0x72, 0x72, 0x12, 0x97, 0xCB, 0xC5, 0xF8, 0xF8, 0x38, 0x6A,
      0xB5, 0x9A, 0xE6, 0xE6, 0x66, 0x5A, 0x5B, 0x5B, 0x19, 0x1B, 0x1B, 0x43, 0x08, 0x41, 0x54, 0x54, 0x14, 0xE5, 0xE5,
      0xE5, 0xE8, 0xF5, 0x7A, 0x54, 0x2A, 0x15, 0x7E, 0xBF, 0x9F, 0x82, 0x82, 0x02, 0x96, 0x2F, 0x5F, 0x4E, 0x47, 0x47,
      0x07, 0x1A, 0x8D, 0x86, 0xC1, 0xC1, 0x41, 0xDC, 0x6E, 0x77, 0x44, 0xC8, 0x2F, 0x5D, 0xBA, 0x14, 0x25, 0xC1, 0x4B,
      0xE4, 0x90, 0x70, 0xF3, 0xF8, 0x23, 0x37, 0x37, 0x97, 0x07, 0x1E, 0x78, 0x00, 0xBB, 0xDD, 0x8E, 0xD3, 0xE9, 0xE4,
      0xC0, 0x81, 0x03, 0x34, 0x35, 0x35, 0x01, 0xC1, 0xC2, 0x2C, 0x25, 0x25, 0x85, 0xF1, 0xF1, 0x71, 0x92, 0x92, 0x92,
      0xB0, 0xDB, 0xED, 0xD4, 0xD6, 0xD6, 0xB2, 0x77, 0xEF, 0x5E, 0xF2, 0xF3, 0xF3, 0x51, 0xA9, 0x54, 0x11, 0x21, 0x0F,
      0xB0, 0x79, 0xF3, 0x66, 0x94, 0x04, 0x6F, 0xC0, 0xC3, 0x42, 0x4B, 0x4B, 0x0B, 0x69, 0x69, 0x69, 0xD4, 0xD4, 0xD4,
      0xD0, 0xD8, 0xD8, 0x38, 0xB5, 0x20, 0x65, 0x64, 0x64, 0x4C, 0x8D, 0x89, 0x40, 0x20, 0x80, 0x5C, 0x2E, 0x47, 0x92,
      0x24, 0xF2, 0xF2, 0xF2, 0x28, 0x2E, 0x2E, 0xC6, 0xE5, 0x72, 0x71, 0xED, 0xDA, 0xB5, 0x59, 0x13, 0x57, 0x2A, 0x95,
      0xE4, 0xE4, 0xE4, 0x70, 0xFC, 0xF8, 0x71, 0x20, 0x78, 0xEA, 0x10, 0xF6, 0xFC, 0xAB, 0xD7, 0xEB, 0x45, 0x74, 0x74,
      0xF4, 0xB4, 0x77, 0x3A, 0x9D, 0x4E, 0x58, 0xAD, 0x56, 0xF1, 0xEA, 0xAB, 0xAF, 0x8A, 0xF7, 0xDF, 0x7F, 0x5F, 0x54,
      0x54, 0x54, 0x88, 0xDA, 0xDA, 0x5A, 0xF1, 0xC1, 0x07, 0x1F, 0x88, 0x45, 0x8B, 0x16, 0x89, 0x35, 0x6B, 0xD6, 0xFC,
      0xCC, 0x27, 0xDC, 0x27, 0x2B, 0x2B, 0x4B, 0x34, 0x34, 0x34, 0x88, 0xF1, 0xF1, 0x71, 0x21, 0x49, 0x92, 0x50, 0x12,
      0xFC, 0xEF, 0x41, 0xD8, 0xB8, 0x5D, 0x4B, 0xCA, 0x64, 0x32, 0x4A, 0x4B, 0x4B, 0xD1, 0x68, 0x34, 0x7C, 0xF6, 0xD9,
      0x67, 0x98, 0x4C, 0x26, 0x46, 0x46, 0x46, 0xF0, 0xF9, 0x7C, 0x7C, 0xFF, 0xFD, 0xF7, 0x74, 0x74, 0x74, 0xCC, 0x6A,
      0x10, 0x67, 0x65, 0x65, 0x51, 0x5F, 0x5F, 0x3F, 0xB5, 0xD7, 0x86, 0x60, 0x0D, 0x94, 0x30, 0xE3, 0x2F, 0xFE, 0x0F,
      0xB9, 0xB9, 0xB9, 0x3C, 0xFE, 0xF8, 0xE3, 0x1C, 0x3B, 0x76, 0x8C, 0xCC, 0xCC, 0x4C, 0x5A, 0x5B, 0x5B, 0xD1, 0x68,
      0x34, 0x8C, 0x8D, 0x8D, 0xB1, 0x7C, 0xF9, 0x72, 0x6C, 0x36, 0x1B, 0xDD, 0xDD, 0xDD, 0xBC, 0xF5, 0xD6, 0x5B, 0x33,
      0x8E, 0xA1, 0x54, 0x2A, 0xA9, 0xAE, 0xAE, 0x9E, 0x46, 0xFE, 0xA6, 0x00, 0xF5, 0x6C, 0x05, 0x48, 0x92, 0x44, 0x41,
      0x41, 0x01, 0x05, 0x05, 0x05, 0xEC, 0xDF, 0xBF, 0x9F, 0xC5, 0x8B, 0x17, 0x53, 0x58, 0x58, 0x48, 0x5A, 0x5A, 0x1A,
      0xED, 0xED, 0xED, 0x98, 0xCD, 0x66, 0x92, 0x92, 0x92, 0x66, 0x15, 0x23, 0x27, 0x27, 0x07, 0xBB, 0xDD, 0x3E, 0x8D,
      0xFC, 0x4D, 0x04, 0x88, 0x50, 0x5D, 0x12, 0x13, 0x13, 0x23, 0x14, 0x0A, 0x85, 0x28, 0x2B, 0x2B, 0x13, 0xA9, 0xA9,
      0xA9, 0x22, 0x2F, 0x2F, 0x4F, 0x9C, 0x3B, 0x77, 0x4E, 0x94, 0x94, 0x94, 0xDC, 0xB1, 0x00, 0x0C, 0xF5, 0xA9, 0xAC,
      0xAC, 0x14, 0x92, 0x24, 0x89, 0x5B, 0xF1, 0x5F, 0x99, 0xA9, 0x75, 0xA0, 0x7E, 0x8B, 0xC2, 0x5D, 0x00, 0x00, 0x00,
      0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82,
  };
 private:
  static inline unsigned char kG101Header[] = {
      0x00, 0x00, 0x00, 0x48, 0x00, 0x32, 0x00, 0x36, 0x00, 0x38,
      0x00, 0x35, 0x00, 0x39, 0x00, 0x39, 0x00, 0x30, 0x00, 0x44,
      0x00, 0x2D, 0x00, 0x38, 0x00, 0x35, 0x00, 0x42, 0x00, 0x38,
      0x00, 0x2D, 0x00, 0x43, 0x00, 0x38, 0x00, 0x34, 0x00, 0x35,
      0x00, 0x2D, 0x00, 0x39, 0x00, 0x31, 0x00, 0x41, 0x00, 0x43,
      0x00, 0x2D, 0x00, 0x30, 0x00, 0x33, 0x00, 0x38, 0x00, 0x45,
      0x00, 0x45, 0x00, 0x42, 0x00, 0x31, 0x00, 0x36, 0x00, 0x30,
      0x00, 0x39, 0x00, 0x36, 0x00, 0x36, 0x00, 0x00, 0x0D, 0x6B,
  };
 protected:
  static inline unsigned char kG101Image[] = {
      0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00,
      0x30, 0x00, 0x00, 0x00, 0x30, 0x08, 0x06, 0x00, 0x00, 0x00, 0x57, 0x02, 0xF9, 0x87, 0x00, 0x00, 0x00, 0x09, 0x70,
      0x48, 0x59, 0x73, 0x00, 0x00, 0x0B, 0x13, 0x00, 0x00, 0x0B, 0x13, 0x01, 0x00, 0x9A, 0x9C, 0x18, 0x00, 0x00, 0x00,
      0x08, 0x74, 0x45, 0x58, 0x74, 0x43, 0x6F, 0x6D, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0xF6, 0xCC, 0x96, 0xBF, 0x00, 0x00,
      0x0D, 0x09, 0x49, 0x44, 0x41, 0x54, 0x68, 0x81, 0xCD, 0x59, 0x7D, 0x50, 0xD4, 0xD5, 0xBB, 0xFF, 0x7C, 0x77, 0xD7,
      0xFD, 0xEE, 0x0B, 0xBB, 0xB8, 0x08, 0x08, 0x2B, 0x89, 0x6E, 0x28, 0x4C, 0x1A, 0x4A, 0xEC, 0x60, 0x86, 0x09, 0xA8,
      0xB0, 0x66, 0x9A, 0x0D, 0xBF, 0x32, 0xAE, 0x36, 0xD1, 0x44, 0x73, 0x6F, 0x32, 0xBE, 0x8D, 0x18, 0x4E, 0x35, 0xA5,
      0xD5, 0x8C, 0xA6, 0xE6, 0x54, 0x83, 0x7A, 0x27, 0xBC, 0x4D, 0x7F, 0x34, 0xB5, 0x43, 0x68, 0x13, 0x68, 0x38, 0x6A,
      0x98, 0x2F, 0x08, 0x66, 0x49, 0x9A, 0x21, 0x02, 0x82, 0x4B, 0x96, 0x84, 0xBC, 0x2C, 0xB5, 0xB0, 0xB0, 0xEC, 0xCB,
      0xE7, 0xFE, 0xC1, 0xB0, 0xD7, 0x85, 0x65, 0xC1, 0x97, 0x5F, 0xDD, 0x67, 0xE6, 0xCC, 0xEC, 0x9E, 0xF3, 0x9C, 0x73,
      0x9E, 0xCF, 0x73, 0x9E, 0xB7, 0x73, 0xBE, 0x02, 0xFE, 0x7F, 0x92, 0x04, 0xC0, 0x24, 0x00, 0x0F, 0x02, 0x88, 0x03,
      0x10, 0x03, 0xC0, 0x00, 0x40, 0x0F, 0x20, 0x0C, 0x80, 0x0E, 0x80, 0x0A, 0xC0, 0x38, 0xE1, 0x9F, 0x92, 0x70, 0x08,
      0xC9, 0x00, 0x44, 0x00, 0x98, 0x0B, 0x20, 0x1D, 0xC0, 0xA3, 0x18, 0x00, 0x10, 0x0C, 0x40, 0x0A, 0x00, 0x2A, 0x95,
      0x0A, 0x4A, 0xA5, 0x12, 0x4E, 0xA7, 0x13, 0x5A, 0xAD, 0x16, 0x6A, 0xB5, 0x1A, 0x4A, 0xA5, 0x12, 0xFF, 0x34, 0x80,
      0x08, 0x00, 0xCF, 0x00, 0xC8, 0x04, 0x90, 0x08, 0x40, 0x0B, 0x00, 0x32, 0x99, 0x0C, 0x93, 0x27, 0x4F, 0xC6, 0xAC,
      0x59, 0xB3, 0x30, 0x65, 0xCA, 0x14, 0x44, 0x44, 0x44, 0xA0, 0xAD, 0xAD, 0x0D, 0x7A, 0xBD, 0x1E, 0x76, 0xBB, 0x1D,
      0x3A, 0x9D, 0x0E, 0x27, 0x4F, 0x9E, 0x44, 0x4C, 0x4C, 0xCC, 0x3F, 0x02, 0x40, 0x09, 0x60, 0x21, 0x80, 0xFF, 0x04,
      0x60, 0x02, 0x20, 0x97, 0xC9, 0x64, 0xD0, 0xEB, 0xF5, 0xE8, 0xEF, 0xEF, 0xC7, 0xAA, 0x55, 0xAB, 0x10, 0x1D, 0x1D,
      0x0D, 0x8F, 0xC7, 0x83, 0xAE, 0xAE, 0x2E, 0x7C, 0xF3, 0xCD, 0x37, 0x50, 0x28, 0x14, 0xB0, 0xDB, 0xED, 0x68, 0x6B,
      0x6B, 0x43, 0x5B, 0x5B, 0x1B, 0xFA, 0xFB, 0xFB, 0xBD, 0x8B, 0xFD, 0x9D, 0x00, 0xB4, 0x00, 0xFE, 0x03, 0x40, 0x2E,
      0x80, 0x87, 0x24, 0x12, 0x89, 0x4C, 0xAD, 0x56, 0x63, 0xC1, 0x82, 0x05, 0x98, 0x33, 0x67, 0x0E, 0xAC, 0x56, 0x2B,
      0x7E, 0xF8, 0xE1, 0x07, 0x88, 0xA2, 0x88, 0xDA, 0xDA, 0x5A, 0x74, 0x74, 0x74, 0xC0, 0x6E, 0xB7, 0x83, 0x64, 0xC0,
      0x45, 0xFF, 0x0E, 0x00, 0x72, 0x00, 0x2F, 0x00, 0xC8, 0x03, 0x10, 0x3B, 0xB8, 0xE7, 0xE2, 0xC5, 0x8B, 0x21, 0x08,
      0x02, 0xF4, 0x7A, 0x3D, 0x2E, 0x5F, 0xBE, 0x8C, 0x9A, 0x9A, 0x1A, 0xF4, 0xF4, 0xF4, 0x8C, 0xB8, 0x88, 0x54, 0x2A,
      0x85, 0xDB, 0xED, 0xFE, 0x1B, 0xC4, 0xBD, 0x6D, 0x4F, 0x00, 0x8B, 0x01, 0x5C, 0x01, 0xC0, 0xA1, 0x4D, 0xAD, 0x56,
      0x53, 0xAD, 0x56, 0x0F, 0xEB, 0xF7, 0xD7, 0x4C, 0x26, 0x13, 0xA7, 0x4C, 0x99, 0x32, 0xD2, 0xF8, 0xBF, 0x85, 0xA2,
      0x01, 0x98, 0x01, 0xF4, 0x8D, 0x45, 0x40, 0x00, 0x9C, 0x30, 0x61, 0x02, 0x0D, 0x06, 0x83, 0xDF, 0xB1, 0x03, 0x07,
      0x0E, 0x30, 0x3D, 0x3D, 0xDD, 0xEF, 0x98, 0xE4, 0x3E, 0x0B, 0x2E, 0x00, 0xF8, 0x17, 0x80, 0x73, 0x00, 0xB2, 0x00,
      0x88, 0x63, 0x9D, 0xD8, 0xD7, 0xD7, 0x87, 0xDE, 0xDE, 0xDE, 0x61, 0xFD, 0x6A, 0xB5, 0x1A, 0xA2, 0x28, 0xC2, 0x64,
      0x32, 0x41, 0x10, 0xFE, 0xBD, 0x16, 0xAF, 0x03, 0xF0, 0x3F, 0x00, 0x3C, 0x18, 0xA2, 0x25, 0x41, 0x10, 0x38, 0x6E,
      0xDC, 0xB8, 0x80, 0x27, 0x10, 0x16, 0x16, 0xC6, 0xA2, 0xA2, 0x22, 0xCE, 0x9B, 0x37, 0x8F, 0x4F, 0x3F, 0xFD, 0xB4,
      0xB7, 0x5F, 0x2A, 0x95, 0x72, 0xEA, 0xD4, 0xA9, 0x2C, 0x28, 0x28, 0x60, 0x58, 0x58, 0x98, 0xCF, 0x1C, 0x51, 0x14,
      0xEF, 0x9B, 0x09, 0x4D, 0x07, 0xF0, 0x93, 0x3F, 0xE1, 0x01, 0x50, 0xA9, 0x54, 0x72, 0xC9, 0x92, 0x25, 0x94, 0x4A,
      0xA5, 0x23, 0x02, 0xD0, 0x6A, 0xB5, 0xAC, 0xAE, 0xAE, 0x66, 0x67, 0x67, 0x27, 0x97, 0x2C, 0x59, 0x32, 0x6C, 0x5C,
      0x2E, 0x97, 0x0F, 0x0A, 0xEC, 0x6D, 0x1B, 0x37, 0x6E, 0xA4, 0xEC, 0x3E, 0x08, 0xBF, 0x00, 0xC0, 0xA7, 0x00, 0x26,
      0x8F, 0xC4, 0x10, 0x1C, 0x1C, 0x8C, 0xB4, 0xB4, 0x34, 0x8C, 0x1F, 0x3F, 0x1E, 0x66, 0xB3, 0x79, 0x58, 0x68, 0x8C,
      0x8F, 0x8F, 0x47, 0x6A, 0x6A, 0x2A, 0x5C, 0x2E, 0x17, 0x14, 0x0A, 0x05, 0xDE, 0x7B, 0xEF, 0x3D, 0xA8, 0xD5, 0x6A,
      0x14, 0x17, 0x17, 0x7B, 0x79, 0x6E, 0x8F, 0xFD, 0xC0, 0x40, 0xB2, 0x8B, 0x8D, 0x8D, 0xBD, 0x67, 0xE1, 0xB3, 0x01,
      0xD8, 0x31, 0x8A, 0x83, 0x6A, 0xB5, 0x5A, 0x7E, 0xF8, 0xE1, 0x87, 0xB4, 0x58, 0x2C, 0x5C, 0xBF, 0x7E, 0x3D, 0x25,
      0x12, 0x89, 0xCF, 0xF8, 0xB7, 0xDF, 0x7E, 0x4B, 0xBB, 0xDD, 0xCE, 0xD2, 0xD2, 0x52, 0x9A, 0xCD, 0x66, 0x7A, 0x3C,
      0x1E, 0x92, 0xE4, 0xE5, 0xCB, 0x97, 0xB9, 0x76, 0xED, 0x5A, 0x4A, 0x24, 0x12, 0x8A, 0xA2, 0xC8, 0xB9, 0x73, 0xE7,
      0x7A, 0x4F, 0x41, 0x14, 0x45, 0x96, 0x94, 0x94, 0x50, 0x7A, 0x97, 0x82, 0x4B, 0x00, 0xBC, 0x04, 0xE0, 0xBF, 0x01,
      0x28, 0x46, 0x63, 0xF6, 0x78, 0x3C, 0x30, 0x99, 0x4C, 0x78, 0xFC, 0xF1, 0xC7, 0x91, 0x91, 0x91, 0x81, 0xB8, 0xB8,
      0x38, 0x9C, 0x39, 0x73, 0x06, 0x76, 0xBB, 0x1D, 0x00, 0x90, 0x9C, 0x9C, 0x0C, 0xA3, 0xD1, 0x88, 0x07, 0x1F, 0x7C,
      0x10, 0x2B, 0x57, 0xAE, 0x44, 0x73, 0x73, 0x33, 0xAC, 0x56, 0x2B, 0x48, 0xE2, 0xD2, 0xA5, 0x4B, 0xB8, 0x70, 0xE1,
      0x02, 0x24, 0x12, 0x09, 0xF6, 0xEF, 0xDF, 0x0F, 0xB9, 0x5C, 0x8E, 0x0B, 0x17, 0x2E, 0x00, 0x18, 0x38, 0xD9, 0xBB,
      0xA5, 0x1C, 0x00, 0xBD, 0x18, 0x63, 0x88, 0x04, 0xC0, 0x67, 0x9E, 0x79, 0x86, 0xED, 0xED, 0xED, 0x5E, 0xED, 0x16,
      0x15, 0x15, 0x79, 0x7D, 0xC2, 0x60, 0x30, 0xF0, 0xD3, 0x4F, 0x3F, 0x65, 0x75, 0x75, 0x35, 0xE3, 0xE3, 0xE3, 0x7D,
      0x9C, 0x7F, 0xF0, 0xB7, 0x5A, 0xAD, 0x66, 0x43, 0x43, 0x03, 0x2B, 0x2A, 0x2A, 0xBC, 0x7D, 0x33, 0x67, 0xCE, 0xBC,
      0x2B, 0x27, 0xCE, 0x46, 0x80, 0xF8, 0x3E, 0x63, 0xC6, 0x0C, 0xBF, 0xFD, 0xF1, 0xF1, 0xF1, 0xBC, 0x7E, 0xFD, 0x3A,
      0x49, 0xB2, 0xBF, 0xBF, 0x9F, 0x65, 0x65, 0x65, 0x0C, 0x09, 0x09, 0xF1, 0x71, 0xCC, 0xA1, 0xA6, 0x75, 0x7B, 0x7F,
      0x61, 0x61, 0x21, 0xAB, 0xAA, 0xAA, 0x78, 0xE3, 0xC6, 0x0D, 0x26, 0x26, 0x26, 0xDE, 0x75, 0x22, 0x5B, 0x80, 0x00,
      0x36, 0x3F, 0x7E, 0xFC, 0x78, 0x2E, 0x58, 0xB0, 0xC0, 0xEF, 0x58, 0x50, 0x50, 0x10, 0x2B, 0x2A, 0x2A, 0xD8, 0xD5,
      0xD5, 0xC5, 0xD6, 0xD6, 0x56, 0xFE, 0xF4, 0xD3, 0x4F, 0xFC, 0xE2, 0x8B, 0x2F, 0x78, 0xED, 0xDA, 0x35, 0x6E, 0xDB,
      0xB6, 0x8D, 0xC1, 0xC1, 0xC1, 0x01, 0x43, 0xEC, 0x9F, 0x7F, 0xFE, 0xC9, 0xC6, 0xC6, 0x46, 0x3A, 0x9D, 0x4E, 0x9A,
      0xCD, 0x66, 0x86, 0x87, 0x87, 0x0F, 0x84, 0xD9, 0x3B, 0x10, 0x7E, 0x3A, 0x80, 0x83, 0x00, 0x42, 0x47, 0x62, 0xD8,
      0xB8, 0x71, 0x23, 0x44, 0x51, 0x44, 0x7D, 0x7D, 0x3D, 0xDC, 0x6E, 0x37, 0xA4, 0x52, 0x29, 0x3C, 0x1E, 0x0F, 0x16,
      0x2D, 0x5A, 0x84, 0xC8, 0xC8, 0x48, 0x9C, 0x3B, 0x77, 0x0E, 0x41, 0x41, 0x41, 0x30, 0x1A, 0x8D, 0xD0, 0xE9, 0x74,
      0x98, 0x31, 0x63, 0x06, 0xC2, 0xC2, 0xC2, 0x30, 0x6F, 0xDE, 0x3C, 0xA4, 0xA5, 0xA5, 0xC1, 0xE1, 0x70, 0xA0, 0xA1,
      0xA1, 0x01, 0x2E, 0x97, 0x0B, 0xC0, 0x40, 0x12, 0x53, 0xAB, 0xD5, 0xE8, 0xEC, 0xEC, 0x84, 0xC5, 0x62, 0xC1, 0xE7,
      0x9F, 0x7F, 0x0E, 0xB5, 0x5A, 0x8D, 0x65, 0xCB, 0x96, 0x21, 0x3D, 0x3D, 0x1D, 0xA5, 0xA5, 0xA5, 0x63, 0x16, 0x5E,
      0x87, 0x81, 0x38, 0x1F, 0xD0, 0xCE, 0x4D, 0x26, 0x13, 0x2F, 0x5E, 0xBC, 0xC8, 0xAF, 0xBE, 0xFA, 0x8A, 0x3B, 0x76,
      0xEC, 0xE0, 0x43, 0x0F, 0x3D, 0x44, 0x89, 0x44, 0xC2, 0xFD, 0xFB, 0xF7, 0xD3, 0x66, 0xB3, 0x71, 0xEF, 0xDE, 0xBD,
      0xBC, 0x7A, 0xF5, 0x2A, 0x3D, 0x1E, 0x0F, 0xAF, 0x5F, 0xBF, 0x4E, 0x8F, 0xC7, 0xC3, 0xFE, 0xFE, 0x7E, 0x3A, 0x9D,
      0x4E, 0x5E, 0xBF, 0x7E, 0x9D, 0xE7, 0xCE, 0x9D, 0xE3, 0xF1, 0xE3, 0xC7, 0x99, 0x91, 0x91, 0x41, 0x8D, 0x46, 0x43,
      0x83, 0xC1, 0xC0, 0x77, 0xDE, 0x79, 0x67, 0xD8, 0x3E, 0x93, 0x26, 0x4D, 0xE2, 0xD6, 0xAD, 0x5B, 0xF9, 0xFC, 0xF3,
      0xCF, 0x8F, 0xE9, 0x04, 0x04, 0x00, 0x05, 0x00, 0x9E, 0xC0, 0x28, 0xD5, 0xAB, 0xCB, 0xE5, 0x82, 0x20, 0x08, 0x58,
      0xB7, 0x6E, 0x1D, 0x8E, 0x1F, 0x3F, 0x8E, 0xB6, 0xB6, 0x36, 0x88, 0xA2, 0x88, 0x95, 0x2B, 0x57, 0x42, 0x2A, 0x95,
      0x62, 0xCE, 0x9C, 0x39, 0x70, 0xB9, 0x5C, 0xA8, 0xAE, 0xAE, 0xC6, 0x2F, 0xBF, 0xFC, 0x02, 0xAD, 0x56, 0x8B, 0x9A,
      0x9A, 0x1A, 0x34, 0x36, 0x36, 0xA2, 0xB3, 0xB3, 0x13, 0x95, 0x95, 0x95, 0x28, 0x29, 0x29, 0xC1, 0xF9, 0xF3, 0xE7,
      0xE1, 0x70, 0x38, 0xA0, 0x52, 0xA9, 0xB0, 0x79, 0xF3, 0x66, 0xF4, 0xF5, 0xF5, 0xE1, 0xE7, 0x9F, 0x7F, 0xF6, 0xEE,
      0x63, 0xB3, 0xD9, 0x50, 0x55, 0x55, 0x85, 0xBA, 0xBA, 0xBA, 0x31, 0x69, 0xFF, 0x5F, 0x18, 0x21, 0xC3, 0xFA, 0x6B,
      0xFE, 0x1C, 0x71, 0xCD, 0x9A, 0x35, 0xEC, 0xEB, 0xEB, 0xA3, 0xC7, 0xE3, 0xE1, 0x5F, 0x7F, 0xFD, 0xC5, 0xFE, 0xFE,
      0x7E, 0x5E, 0xB9, 0x72, 0x85, 0x7B, 0xF6, 0xEC, 0xA1, 0xC1, 0x60, 0xA0, 0x5A, 0xAD, 0x66, 0x54, 0x54, 0x14, 0xF5,
      0x7A, 0x3D, 0xE5, 0x72, 0xB9, 0x77, 0xDE, 0x93, 0x4F, 0x3E, 0xC9, 0x2F, 0xBF, 0xFC, 0x92, 0x07, 0x0E, 0x1C, 0xE0,
      0xFA, 0xF5, 0xEB, 0x19, 0x1C, 0x1C, 0x4C, 0x41, 0x10, 0x86, 0x56, 0xB1, 0x01, 0x29, 0x1A, 0x40, 0xCB, 0x48, 0xC2,
      0x6A, 0x34, 0x1A, 0x1F, 0x07, 0xD6, 0xE9, 0x74, 0xDE, 0xFF, 0xE1, 0xE1, 0xE1, 0x5E, 0x61, 0x14, 0x0A, 0x05, 0xB3,
      0xB3, 0xB3, 0xD9, 0xD1, 0xD1, 0xC1, 0x23, 0x47, 0x8E, 0xD0, 0xE9, 0x74, 0xB2, 0xBB, 0xBB, 0x9B, 0x87, 0x0F, 0x1F,
      0x66, 0x46, 0x46, 0xC6, 0xB0, 0xB5, 0xFC, 0x35, 0x41, 0x10, 0x28, 0x93, 0xC9, 0xB8, 0x6D, 0xDB, 0x36, 0x9F, 0xAA,
      0x35, 0x50, 0x29, 0x21, 0x05, 0xF0, 0x1E, 0x06, 0xEE, 0xAD, 0x7E, 0x29, 0x29, 0x29, 0x09, 0xB9, 0xB9, 0xB9, 0xE8,
      0xEA, 0xEA, 0x42, 0x53, 0x53, 0x13, 0xE2, 0xE3, 0xE3, 0x21, 0x95, 0x4A, 0x41, 0x12, 0x27, 0x4E, 0x9C, 0xC0, 0xC7,
      0x1F, 0x7F, 0x0C, 0x60, 0xA0, 0xD2, 0x34, 0x9B, 0xCD, 0x70, 0x38, 0x1C, 0x48, 0x48, 0x48, 0x40, 0x68, 0x68, 0x28,
      0xEA, 0xEA, 0xEA, 0xF0, 0xE3, 0x8F, 0x3F, 0xA2, 0xAA, 0xAA, 0x0A, 0x82, 0x20, 0x60, 0xE3, 0xC6, 0x8D, 0xD8, 0xBE,
      0x7D, 0xFB, 0xB0, 0x92, 0x61, 0x90, 0x48, 0xC2, 0x64, 0x32, 0x61, 0xF6, 0xEC, 0xD9, 0x68, 0x6A, 0x6A, 0x1A, 0x4D,
      0xF1, 0x00, 0x06, 0x2E, 0x23, 0x01, 0xEB, 0x79, 0x89, 0x44, 0x42, 0x93, 0xC9, 0xC4, 0x13, 0x27, 0x4E, 0xB0, 0xA1,
      0xA1, 0x81, 0x2E, 0x97, 0x8B, 0xB7, 0x6E, 0xDD, 0xE2, 0x86, 0x0D, 0x1B, 0xA8, 0x52, 0xA9, 0xFC, 0xCE, 0x91, 0x4A,
      0xA5, 0x0C, 0x0E, 0x0E, 0xF6, 0x29, 0xEC, 0x82, 0x82, 0x82, 0x58, 0x5C, 0x5C, 0xCC, 0xFC, 0xFC, 0xFC, 0x11, 0x73,
      0x01, 0x00, 0x9A, 0xCD, 0x66, 0xEE, 0xDC, 0xB9, 0x73, 0x68, 0xBF, 0x5F, 0x92, 0xC3, 0xCF, 0x4D, 0x2A, 0x29, 0x29,
      0x89, 0x46, 0xA3, 0xD1, 0x27, 0x43, 0x02, 0xE0, 0xBC, 0x79, 0xF3, 0x58, 0x58, 0x58, 0xC8, 0xB8, 0xB8, 0x38, 0xAF,
      0x7D, 0x8A, 0xA2, 0xC8, 0x97, 0x5E, 0x7A, 0x69, 0x58, 0x62, 0x1B, 0x3A, 0x17, 0x00, 0x65, 0x32, 0x19, 0xD7, 0xAC,
      0x59, 0xC3, 0xD6, 0xD6, 0x56, 0x2E, 0x5A, 0xB4, 0xC8, 0x67, 0x4C, 0xA5, 0x52, 0x31, 0x32, 0x32, 0x92, 0xD1, 0xD1,
      0xD1, 0xFC, 0xFD, 0xF7, 0xDF, 0x99, 0x95, 0x95, 0x35, 0x26, 0x00, 0x2F, 0x0F, 0xDD, 0x44, 0xA5, 0x52, 0x71, 0xC7,
      0x8E, 0x1D, 0xBC, 0x71, 0xE3, 0x06, 0xCF, 0x9E, 0x3D, 0xEB, 0x93, 0xF2, 0xC7, 0x8D, 0x1B, 0x47, 0xB9, 0x5C, 0xEE,
      0x23, 0x9C, 0x28, 0x8A, 0x2C, 0x2B, 0x2B, 0xE3, 0x6F, 0xBF, 0xFD, 0xC6, 0xB5, 0x6B, 0xD7, 0x52, 0xA7, 0xD3, 0x51,
      0xAF, 0xD7, 0xF3, 0xAD, 0xB7, 0xDE, 0xF2, 0xFA, 0xC6, 0x60, 0xF2, 0x92, 0x4A, 0xA5, 0xD4, 0xE9, 0x74, 0x7C, 0xF8,
      0xE1, 0x87, 0xB9, 0x7A, 0xF5, 0x6A, 0x46, 0x44, 0x44, 0x78, 0xD7, 0x59, 0xB8, 0x70, 0x21, 0xAB, 0xAA, 0xAA, 0x98,
      0x97, 0x97, 0x47, 0xBB, 0xDD, 0xCE, 0xB4, 0xB4, 0xB4, 0x51, 0x01, 0x68, 0x01, 0xD4, 0xFA, 0x3B, 0x42, 0x8D, 0x46,
      0xC3, 0xEC, 0xEC, 0x6C, 0xDA, 0x6C, 0x36, 0xD6, 0xD6, 0xD6, 0x32, 0x29, 0x29, 0x29, 0xA0, 0xE3, 0xAD, 0x5C, 0xB9,
      0x92, 0xDD, 0xDD, 0xDD, 0x74, 0xBB, 0xDD, 0xBC, 0x72, 0xE5, 0x0A, 0x8F, 0x1E, 0x3D, 0xCA, 0x63, 0xC7, 0x8E, 0x31,
      0x21, 0x21, 0x81, 0xB1, 0xB1, 0xB1, 0x5E, 0x6D, 0xEB, 0xF5, 0x7A, 0x96, 0x96, 0x96, 0x72, 0xFA, 0xF4, 0xE9, 0xC3,
      0xD6, 0x08, 0x09, 0x09, 0xE1, 0xE6, 0xCD, 0x9B, 0x59, 0x5A, 0x5A, 0x4A, 0x9B, 0xCD, 0xC6, 0x9C, 0x9C, 0x1C, 0x2E,
      0x5D, 0xBA, 0xF4, 0xF6, 0x80, 0x31, 0x8C, 0xFE, 0x0B, 0x01, 0xC2, 0xA6, 0x52, 0xA9, 0xE4, 0xF1, 0xE3, 0xC7, 0xE9,
      0x74, 0x3A, 0x69, 0xB3, 0xD9, 0xB8, 0x74, 0xE9, 0x52, 0x7F, 0x5A, 0xF1, 0x9A, 0x4B, 0x7E, 0x7E, 0x3E, 0x7B, 0x7B,
      0x7B, 0x49, 0x92, 0x2E, 0x97, 0x8B, 0x6D, 0x6D, 0x6D, 0xAC, 0xAD, 0xAD, 0xF5, 0x31, 0xAD, 0x89, 0x13, 0x27, 0xB2,
      0xA5, 0xA5, 0x85, 0xDB, 0xB6, 0x6D, 0x1B, 0x51, 0x19, 0xA1, 0xA1, 0xA1, 0x3C, 0x76, 0xEC, 0x18, 0xCD, 0x66, 0x33,
      0x37, 0x6D, 0xDA, 0xC4, 0xE5, 0xCB, 0x97, 0x33, 0x33, 0x33, 0x73, 0x18, 0x00, 0x25, 0x80, 0x4B, 0x81, 0xB4, 0x0A,
      0x80, 0x73, 0xE7, 0xCE, 0xA5, 0xD5, 0x6A, 0x25, 0x49, 0xFE, 0xFA, 0xEB, 0xAF, 0xB4, 0xDB, 0xED, 0xDC, 0xB4, 0x69,
      0x13, 0xB7, 0x6F, 0xDF, 0xCE, 0xD4, 0xD4, 0x54, 0x9F, 0x17, 0x04, 0xA9, 0x54, 0xCA, 0xF4, 0xF4, 0x74, 0xBE, 0xF9,
      0xE6, 0x9B, 0xAC, 0xAA, 0xAA, 0xE2, 0xCE, 0x9D, 0x3B, 0xA9, 0xD7, 0xEB, 0x7D, 0x4C, 0xED, 0x95, 0x57, 0x5E, 0x61,
      0x7D, 0x7D, 0x3D, 0xCB, 0xCB, 0xCB, 0x03, 0xBE, 0x54, 0x28, 0x14, 0x0A, 0xC6, 0xC5, 0xC5, 0x05, 0x34, 0xA1, 0xA5,
      0x00, 0x9C, 0xA3, 0x01, 0x10, 0x04, 0x81, 0x6F, 0xBC, 0xF1, 0x06, 0x6D, 0x36, 0x1B, 0x3D, 0x1E, 0x0F, 0x5D, 0x2E,
      0x17, 0xDB, 0xDB, 0xDB, 0x49, 0x92, 0x6E, 0xB7, 0x9B, 0xCD, 0xCD, 0xCD, 0xDC, 0xB0, 0x61, 0x83, 0xD7, 0x2F, 0x32,
      0x33, 0x33, 0x59, 0x5E, 0x5E, 0xCE, 0xCB, 0x97, 0x2F, 0xB3, 0xA0, 0xA0, 0x80, 0x21, 0x21, 0x21, 0xDE, 0xB5, 0x12,
      0x12, 0x12, 0xE8, 0x70, 0x38, 0xD8, 0xD5, 0xD5, 0x45, 0x87, 0xC3, 0xC1, 0x15, 0x2B, 0x56, 0x04, 0xDC, 0xDB, 0x4F,
      0xF3, 0xA1, 0xD2, 0x91, 0x18, 0x65, 0x32, 0x19, 0x65, 0x32, 0x99, 0x4F, 0xDF, 0x9C, 0x39, 0x73, 0x78, 0xE6, 0xCC,
      0x19, 0xBA, 0xDD, 0x6E, 0x9A, 0xCD, 0x66, 0x3A, 0x9D, 0x4E, 0xF6, 0xF6, 0xF6, 0xB2, 0xB2, 0xB2, 0x92, 0xA7, 0x4E,
      0x9D, 0xE2, 0xFC, 0xF9, 0xF3, 0x19, 0x14, 0x14, 0xC4, 0xB3, 0x67, 0xCF, 0xD2, 0xED, 0x76, 0xD3, 0xE3, 0xF1, 0xF0,
      0xD6, 0xAD, 0x5B, 0x9C, 0x35, 0x6B, 0x96, 0x77, 0x0D, 0xAD, 0x56, 0xCB, 0xAF, 0xBF, 0xFE, 0x9A, 0xAB, 0x57, 0xAF,
      0x66, 0x7B, 0x7B, 0x3B, 0xED, 0x76, 0x3B, 0x5F, 0x7D, 0xF5, 0xD5, 0x80, 0xF7, 0xE7, 0x91, 0x00, 0x44, 0x00, 0x70,
      0x8C, 0xC4, 0x18, 0x1C, 0x1C, 0xCC, 0xD7, 0x5F, 0x7F, 0x9D, 0x33, 0x67, 0xCE, 0xA4, 0x5A, 0xAD, 0xA6, 0x28, 0x8A,
      0x3C, 0x78, 0xF0, 0x20, 0x6D, 0x36, 0x1B, 0x49, 0xB2, 0xB0, 0xB0, 0x90, 0xCF, 0x3D, 0xF7, 0x1C, 0x1F, 0x7D, 0xF4,
      0x51, 0xAA, 0xD5, 0x6A, 0x4E, 0x9B, 0x36, 0xCD, 0xAB, 0x69, 0x93, 0xC9, 0xC4, 0xEA, 0xEA, 0x6A, 0xD6, 0xD7, 0xD7,
      0xF3, 0xFD, 0xF7, 0xDF, 0xF7, 0x2A, 0x62, 0xFC, 0xF8, 0xF1, 0x5E, 0x33, 0x92, 0x4A, 0xA5, 0x34, 0x18, 0x0C, 0x5C,
      0xB7, 0x6E, 0x1D, 0x2B, 0x2A, 0x2A, 0x68, 0x34, 0x1A, 0xEF, 0x18, 0xC0, 0x9A, 0xD1, 0xCC, 0x66, 0xDF, 0xBE, 0x7D,
      0xDC, 0xB5, 0x6B, 0x17, 0xE7, 0xCF, 0x9F, 0x4F, 0x41, 0x10, 0xB8, 0x7C, 0xF9, 0x72, 0x36, 0x35, 0x35, 0xD1, 0xE3,
      0xF1, 0xB0, 0xA1, 0xA1, 0xC1, 0x7B, 0x17, 0x10, 0x04, 0xC1, 0x5B, 0x22, 0x0C, 0xB6, 0xB0, 0xB0, 0x30, 0x4E, 0x9C,
      0x38, 0xD1, 0x47, 0xB3, 0x79, 0x79, 0x79, 0x7E, 0x6D, 0x3E, 0x36, 0x36, 0x96, 0xA1, 0xA1, 0xA1, 0x77, 0x04, 0x40,
      0x06, 0xE0, 0xC4, 0x68, 0xCC, 0x2A, 0x95, 0x8A, 0x2A, 0x95, 0xCA, 0x27, 0x5B, 0x46, 0x47, 0x47, 0x33, 0x2B, 0x2B,
      0xCB, 0xAB, 0xCD, 0x41, 0x00, 0xC5, 0xC5, 0xC5, 0x7C, 0xEA, 0xA9, 0xA7, 0x46, 0x5C, 0x4B, 0x26, 0x93, 0xB1, 0xB0,
      0xB0, 0x90, 0xAF, 0xBD, 0xF6, 0xDA, 0x9D, 0xDA, 0xBC, 0xEF, 0x3A, 0xB7, 0x99, 0x4F, 0x22, 0xFC, 0x50, 0x54, 0x54,
      0x14, 0xE6, 0xCF, 0x9F, 0x0F, 0xA7, 0xD3, 0x09, 0xB7, 0xDB, 0x8D, 0xC9, 0x93, 0x27, 0x63, 0xEF, 0xDE, 0xBD, 0x90,
      0xC9, 0x64, 0xE8, 0xEF, 0xEF, 0x47, 0x73, 0x73, 0x33, 0x9A, 0x9B, 0x9B, 0x7D, 0xE6, 0x88, 0xA2, 0x08, 0x9B, 0xCD,
      0x86, 0xB7, 0xDF, 0x7E, 0x1B, 0x5A, 0xAD, 0x16, 0x47, 0x8E, 0x1C, 0x41, 0x47, 0x47, 0x87, 0x0F, 0x4F, 0x44, 0x44,
      0x04, 0xA2, 0xA2, 0xA2, 0xF0, 0xC0, 0x03, 0x0F, 0xA0, 0xBE, 0xBE, 0x1E, 0x87, 0x0F, 0x1F, 0x86, 0xC3, 0xE1, 0xF0,
      0x27, 0xC2, 0x98, 0xE8, 0xD9, 0x40, 0x28, 0x57, 0xAD, 0x5A, 0xC5, 0xD3, 0xA7, 0x4F, 0x73, 0xF7, 0xEE, 0xDD, 0x0C,
      0x0A, 0x0A, 0xA2, 0x4C, 0x26, 0x63, 0x66, 0x66, 0x26, 0x17, 0x2F, 0x5E, 0xEC, 0xD7, 0x04, 0x04, 0x41, 0x60, 0x4A,
      0x4A, 0x0A, 0xA7, 0x4C, 0x99, 0x42, 0xA3, 0xD1, 0xC8, 0xA8, 0xA8, 0x28, 0x02, 0xF0, 0xC9, 0xDE, 0xC0, 0xFF, 0x3D,
      0xF0, 0x26, 0x24, 0x24, 0x50, 0xAB, 0xD5, 0xDE, 0xED, 0x29, 0x00, 0x00, 0x0A, 0x03, 0x31, 0x09, 0x82, 0xC0, 0x97,
      0x5F, 0x7E, 0xD9, 0x27, 0x53, 0x1A, 0x8D, 0x46, 0x7E, 0xF7, 0xDD, 0x77, 0xB4, 0x5A, 0xAD, 0x5E, 0x70, 0x83, 0x4E,
      0x7B, 0xFB, 0x33, 0xE2, 0xED, 0xE5, 0x45, 0x51, 0x51, 0x11, 0x27, 0x4D, 0x9A, 0x74, 0x4F, 0x26, 0xE3, 0x0F, 0x80,
      0x04, 0xC0, 0xCF, 0x77, 0x3A, 0x51, 0x2E, 0x97, 0x73, 0xCB, 0x96, 0x2D, 0xBC, 0x75, 0xEB, 0x96, 0x37, 0xCB, 0x6E,
      0xD9, 0xB2, 0x85, 0x05, 0x05, 0x05, 0xB4, 0x58, 0x2C, 0x3C, 0x7D, 0xFA, 0x34, 0x4B, 0x4A, 0x4A, 0xF8, 0xD9, 0x67,
      0x9F, 0x31, 0x25, 0x25, 0x85, 0x0A, 0x85, 0x82, 0x15, 0x15, 0x15, 0xDC, 0xB7, 0x6F, 0x1F, 0x1F, 0x79, 0xE4, 0x91,
      0x80, 0x55, 0xE7, 0x9D, 0x02, 0x78, 0x00, 0x40, 0xC7, 0xD0, 0x81, 0xB1, 0xC4, 0x61, 0xA5, 0x52, 0xC9, 0x5D, 0xBB,
      0x76, 0xD1, 0xE1, 0x70, 0xB0, 0xB3, 0xB3, 0x93, 0x9D, 0x9D, 0x9D, 0xDE, 0xB0, 0xEA, 0x70, 0x38, 0x58, 0x59, 0x59,
      0xC9, 0xDC, 0xDC, 0x5C, 0x2A, 0x95, 0x4A, 0x02, 0xE0, 0xA2, 0x45, 0x8B, 0x68, 0xB1, 0x58, 0x78, 0xF2, 0xE4, 0xC9,
      0x31, 0x7F, 0x1B, 0x18, 0x0B, 0x80, 0x54, 0x00, 0xAE, 0xA1, 0x03, 0x83, 0x0F, 0xAC, 0x1A, 0x8D, 0x26, 0x60, 0xD1,
      0x16, 0x1E, 0x1E, 0xCE, 0x3D, 0x7B, 0xF6, 0xF0, 0xF4, 0xE9, 0xD3, 0x74, 0xB9, 0x5C, 0xB4, 0x5A, 0xAD, 0xEC, 0xE9,
      0xE9, 0x61, 0x61, 0x61, 0x21, 0x97, 0x2D, 0x5B, 0x46, 0x85, 0x42, 0x41, 0x60, 0x20, 0xEA, 0x7C, 0xFF, 0xFD, 0xF7,
      0xAC, 0xA9, 0xA9, 0xE1, 0xD9, 0xB3, 0x67, 0x79, 0xED, 0xDA, 0x35, 0x9A, 0xCD, 0x66, 0xA6, 0xA7, 0xA7, 0xDF, 0xD3,
      0x69, 0xC8, 0x30, 0xF0, 0x1D, 0x76, 0xD8, 0xE5, 0xFE, 0xEA, 0xD5, 0xAB, 0xC8, 0xCB, 0xCB, 0x83, 0xD5, 0x6A, 0x45,
      0x72, 0x72, 0x32, 0x2E, 0x5E, 0xBC, 0x08, 0x89, 0x44, 0x82, 0xC1, 0x0F, 0x72, 0x16, 0x8B, 0x05, 0x2E, 0x97, 0x0B,
      0x89, 0x89, 0x89, 0x50, 0x28, 0x14, 0xF8, 0xE3, 0x8F, 0x3F, 0xD0, 0xD0, 0xD0, 0x00, 0x8B, 0xC5, 0x82, 0xEE, 0xEE,
      0x6E, 0xEC, 0xDE, 0xBD, 0x1B, 0x75, 0x75, 0x75, 0xD0, 0x68, 0x34, 0x00, 0x06, 0x6E, 0x65, 0x5B, 0xB6, 0x6C, 0x41,
      0x68, 0x68, 0x28, 0x0E, 0x1D, 0x3A, 0x04, 0x8D, 0x46, 0x03, 0xA7, 0xD3, 0x09, 0x9B, 0xCD, 0x06, 0x8F, 0xC7, 0x33,
      0x74, 0xFB, 0x31, 0x51, 0x72, 0x72, 0x32, 0x00, 0xE0, 0x7D, 0x7F, 0xC8, 0xA4, 0x52, 0x29, 0x0F, 0x1E, 0x3C, 0xC8,
      0xB6, 0xB6, 0x36, 0xDA, 0x6C, 0x36, 0x56, 0x55, 0x55, 0xF1, 0xFC, 0xF9, 0xF3, 0xBC, 0x7A, 0xF5, 0x2A, 0x1B, 0x1A,
      0x1A, 0xBC, 0x11, 0xE5, 0xDD, 0x77, 0xDF, 0x65, 0x63, 0x63, 0x23, 0xBB, 0xBB, 0xBB, 0xD9, 0xDA, 0xDA, 0x4A, 0xB7,
      0xDB, 0x4D, 0x8B, 0xC5, 0xC2, 0xFC, 0xFC, 0x7C, 0x02, 0xA0, 0x4E, 0xA7, 0xE3, 0xEE, 0xDD, 0xBB, 0x19, 0x1D, 0x1D,
      0x7D, 0x5F, 0x9D, 0x57, 0x10, 0x04, 0x7E, 0xF2, 0xC9, 0x27, 0x04, 0x80, 0xAF, 0x46, 0x62, 0x9A, 0x3A, 0x75, 0x2A,
      0x6F, 0xDC, 0xB8, 0xC1, 0xE6, 0xE6, 0x66, 0x92, 0xA4, 0xD3, 0xE9, 0x64, 0x6D, 0x6D, 0xAD, 0xCF, 0xAD, 0x28, 0x26,
      0x26, 0x86, 0x65, 0x65, 0x65, 0x6C, 0x6D, 0x6D, 0xE5, 0xA9, 0x53, 0xA7, 0xD8, 0xD1, 0xD1, 0xC1, 0x92, 0x92, 0x12,
      0x4E, 0x9D, 0x3A, 0xD5, 0xCB, 0x93, 0x97, 0x97, 0xC7, 0xFA, 0xFA, 0x7A, 0x6E, 0xDD, 0xBA, 0x95, 0x09, 0x09, 0x09,
      0xF7, 0x2C, 0xBC, 0x4C, 0x26, 0xE3, 0xCC, 0x99, 0x33, 0xF9, 0xEC, 0xB3, 0xCF, 0x12, 0x18, 0xF8, 0x1C, 0x34, 0x8C,
      0x69, 0xE1, 0xC2, 0x85, 0x2C, 0x2F, 0x2F, 0x67, 0x75, 0x75, 0x35, 0xB3, 0xB2, 0xB2, 0x98, 0x93, 0x93, 0x43, 0x93,
      0xC9, 0xC4, 0x09, 0x13, 0x26, 0x0C, 0xE3, 0xD5, 0x6A, 0xB5, 0x7C, 0xEC, 0xB1, 0xC7, 0x98, 0x91, 0x91, 0xC1, 0xD4,
      0xD4, 0x54, 0x9F, 0x6A, 0x13, 0x18, 0x78, 0x88, 0x2A, 0x2F, 0x2F, 0xA7, 0xD5, 0x6A, 0x65, 0x4B, 0x4B, 0x0B, 0x3F,
      0xF8, 0xE0, 0x03, 0x1A, 0x8D, 0x46, 0x9F, 0xEC, 0x3D, 0xD6, 0x16, 0x17, 0x17, 0xC7, 0xA3, 0x47, 0x8F, 0x7A, 0x2B,
      0x61, 0x00, 0x68, 0xF4, 0xC7, 0xF8, 0xE2, 0x8B, 0x2F, 0xD2, 0xE9, 0x74, 0xD2, 0xED, 0x76, 0xB3, 0xA5, 0xA5, 0x85,
      0xB1, 0xB1, 0xB1, 0x77, 0xAD, 0x31, 0x9D, 0x4E, 0xC7, 0xEC, 0xEC, 0x6C, 0x3E, 0xF1, 0xC4, 0x13, 0xFC, 0xE8, 0xA3,
      0x8F, 0x58, 0x50, 0x50, 0xC0, 0xE5, 0xCB, 0x97, 0x7B, 0x1D, 0xFC, 0x4E, 0x84, 0x1F, 0x7C, 0xD1, 0x1B, 0x24, 0x00,
      0xE8, 0xF4, 0xC7, 0x6C, 0x30, 0x18, 0x78, 0xE4, 0xC8, 0x11, 0xDE, 0xBC, 0x79, 0x93, 0x15, 0x15, 0x15, 0x4C, 0x4C,
      0x4C, 0x64, 0x48, 0x48, 0xC8, 0xA8, 0xDF, 0xBA, 0x06, 0xED, 0x33, 0x3A, 0x3A, 0xDA, 0xEF, 0xA7, 0xA2, 0x7B, 0x31,
      0x9B, 0x63, 0xC7, 0x8E, 0xF9, 0x08, 0x3F, 0x08, 0x60, 0xC4, 0xA7, 0x13, 0x8D, 0x46, 0xC3, 0xE9, 0xD3, 0xA7, 0x7B,
      0xD3, 0xBC, 0x56, 0xAB, 0xE5, 0xFE, 0xFD, 0xFB, 0x39, 0x6D, 0xDA, 0x34, 0xCA, 0xE5, 0x72, 0x9F, 0x5C, 0x11, 0x19,
      0x19, 0xC9, 0x94, 0x94, 0x14, 0xBE, 0xF0, 0xC2, 0x0B, 0xCC, 0xCD, 0xCD, 0xE5, 0xCD, 0x9B, 0x37, 0x99, 0x93, 0x93,
      0x73, 0xDF, 0x00, 0xCC, 0x9E, 0x3D, 0x9B, 0x3D, 0x3D, 0x3D, 0x1C, 0x4A, 0x00, 0xE0, 0xBE, 0x93, 0x85, 0xB6, 0x6E,
      0xDD, 0xCA, 0x4B, 0x97, 0x2E, 0xB1, 0xA0, 0xA0, 0x80, 0x91, 0x91, 0x91, 0xDE, 0xFE, 0x98, 0x98, 0x18, 0x1E, 0x3A,
      0x74, 0x88, 0xAD, 0xAD, 0xAD, 0x6C, 0x6A, 0x6A, 0xE2, 0xA1, 0x43, 0x87, 0x38, 0x61, 0xC2, 0x04, 0x8A, 0xA2, 0xE8,
      0xF7, 0x29, 0xE5, 0x4E, 0xDB, 0x8A, 0x15, 0x2B, 0x86, 0x09, 0x4F, 0x92, 0xFF, 0x0B, 0x4D, 0xCF, 0x1C, 0x4A, 0x41,
      0x5E, 0x61, 0x34, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82,
  };

 protected:
  std::filesystem::path defs_file_path_;
  std::filesystem::path data_index_path_;
  std::filesystem::path data_path_;
  std::filesystem::path db_path_;

  void SetUp() override {
    // Init defs file
    defs_file_path_ = std::filesystem::temp_directory_path() / std::tmpnam(nullptr);
    std::ofstream defs_file(defs_file_path_);
    defs_file << kDefsContents;
    defs_file.close();

    // Init data index
    data_index_path_ = std::filesystem::temp_directory_path() / std::tmpnam(nullptr);
    std::ofstream data_index_file(data_index_path_);
    data_index_file << kDataIndexContents;
    data_index_file.close();

    // Init data
    data_path_ = std::filesystem::temp_directory_path() / std::tmpnam(nullptr);
    std::ofstream data_file(data_path_, std::ofstream::out | std::ofstream::binary);
    data_file.write(reinterpret_cast<const char *>(kG100Header), sizeof(kG100Header));
    data_file.write(reinterpret_cast<const char *>(kG100Image), sizeof(kG100Image));
    data_file.write(reinterpret_cast<const char *>(kG101Header), sizeof(kG101Header));
    data_file.write(reinterpret_cast<const char *>(kG101Image), sizeof(kG101Image));
    data_file.close();

    // Create db file
    db_path_ = std::filesystem::temp_directory_path() / std::tmpnam(nullptr);
  }

  void TearDown() override {
    std::filesystem::remove(defs_file_path_);
    std::filesystem::remove(data_index_path_);
    std::filesystem::remove(data_path_);
    std::filesystem::remove(db_path_);
  }

  disc::DiscDb CreateDb(bool allow_writing = false) {
    return disc::DiscDb(defs_file_path_.string(), data_index_path_.string(), data_path_.string(), db_path_.string(), allow_writing);
  }
};

TEST_F(DiscDbTest, TestNew) {
  disc::DiscDb disc_db = CreateDb(true);
  EXPECT_FALSE(disc_db.UpToDate());
  unsigned int last_progress = 0;
  disc_db.Update([&last_progress](unsigned long current, unsigned long total) {
    EXPECT_GT(current, last_progress);
    EXPECT_LE(current, total);
    last_progress = current;
  });
  EXPECT_TRUE(disc_db.UpToDate());
}

TEST_F(DiscDbTest, TestGetManufacturers) {
  disc::DiscDb disc_db = CreateDb(true);
  EXPECT_FALSE(disc_db.UpToDate());
  disc_db.Update();
  EXPECT_TRUE(disc_db.UpToDate());

  const std::vector<Manufacturer> expected_manufacturers{
      Manufacturer(1, "GAM")
  };
  EXPECT_EQ(expected_manufacturers, disc_db.GetManufacturers());
}

TEST_F(DiscDbTest, TestGetSeriesForManufacturer) {
  disc::DiscDb disc_db = CreateDb(true);
  EXPECT_FALSE(disc_db.UpToDate());
  disc_db.Update();
  EXPECT_TRUE(disc_db.UpToDate());

  const std::vector<Manufacturer> expected_manufacturers{
      Manufacturer(1, "GAM")
  };
  EXPECT_EQ(expected_manufacturers, disc_db.GetManufacturers());

  const std::vector<Series> expected_series{
      Series(1, "Catalogue"),
  };
  EXPECT_EQ(expected_series, disc_db.GetSeriesForManufacturer(expected_manufacturers.front()));
}

TEST_F(DiscDbTest, TestGetForSeries) {
  disc::DiscDb disc_db = CreateDb(true);
  EXPECT_FALSE(disc_db.UpToDate());
  disc_db.Update();
  EXPECT_TRUE(disc_db.UpToDate());

  const std::vector<Manufacturer> expected_manufacturers{
      Manufacturer(1, "GAM")
  };
  EXPECT_EQ(expected_manufacturers, disc_db.GetManufacturers());

  const std::vector<Series> expected_series{
      Series(1, "Catalogue"),
  };
  EXPECT_EQ(expected_series, disc_db.GetSeriesForManufacturer(expected_manufacturers.front()));

  const std::vector<ImageEntity> expected_discs{
      ImageEntity("8A42C305-5601-8243-AC54-FDCE53119538",
                  "100",
                  "Cupids",
                  kG100Image,
                  sizeof(kG100Image)),
      ImageEntity("2685990D-85B8-C845-91AC-038EEB160966",
                  "101",
                  "Doves",
                  kG101Image,
                  sizeof(kG101Image)),
  };
  EXPECT_EQ(expected_discs, disc_db.GetForSeries(expected_series.front()));
}
